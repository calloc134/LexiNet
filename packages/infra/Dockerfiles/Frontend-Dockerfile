# ビルド用ステージ
FROM node:latest as build-stage

# 作業ディレクトリを指定
WORKDIR /home

# パッケージの存在するパス
ARG PACKAGE_PATH=packages/frontend
ARG SCHEMA_PATH=./graphql/schemas/*.graphql
ARG OPERATION_PATH=/home/graphql/operations/*.graphql

# package.jsonのみをコピーする
COPY ${PACKAGE_PATH}/package.json ./

# pnpmに切り替える
RUN corepack enable pnpm
RUN corepack prepare pnpm@latest --activate

# 依存関係をインストールする
RUN pnpm install

# データの引継ぎ
COPY ${PACKAGE_PATH}/ ./
COPY ${PACKAGE_PATH}/../graphql/ ./graphql/

# graphql codegenを実行する
RUN pnpm codegen

# ビルドする
RUN pnpm build

# 本番用ステージ
# nginxイメージを利用
FROM nginx:latest as production-stage

ARG INFRADIR=packages/infra
ARG CERTBOT_EMAIL="dummy@dummy.dummy"
ARG HOSTNAME="dummy.dummy"

# certbotのインストール
RUN apt-get update && apt-get install -y certbot python3-certbot-nginx

# データを引き継ぐ
COPY --from=build-stage /home/dist /usr/share/nginx/dist

# COPY ${INFRADIR}/config/nginx-prod /etc/nginx/conf.d 
COPY ${INFRADIR}/config/nginx-prod /etc/nginx/templates

# 証明書を保存するディレクトリを作成する
RUN mkdir -p /etc/letsencrypt/live/${HOSTNAME}

# certbotの実行
# このcertbotではdns-01チャレンジで証明書を取得する
# 失敗した場合はopensslで秘密鍵と証明書を生成する
# 以下のファイルに証明書が保存される
# /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem;
# /etc/letsencrypt/live/${HOSTNAME}/privkey.pem;
RUN certbot certonly --agree-tos --email ${CERTBOT_EMAIL} --no-eff-email --manual --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory --manual-public-ip-logging-ok -d ${HOSTNAME} -d *.${HOSTNAME} --manual-auth-hook "echo 'Please create TXT record in 30 seconds'; sleep 30" || \
  openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/letsencrypt/live/${HOSTNAME}/privkey.pem -out /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem -subj "/C=JP/ST=Tokyo/L=Tokyo/O=Example Ltd./CN=${HOSTNAME}"